{"version":3,"sources":["src/app/login/login.page.html","src/app/login/login-routing.module.ts","src/app/login/login.module.ts","src/app/login/login.page.scss","src/app/login/login.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>Login</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding form-content\\\">\\r\\n  <form class=\\\"form\\\" [formGroup]=\\\"validationsForm\\\" (ngSubmit)=\\\"tryLogin(validationsForm.value)\\\">\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Email</ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validationMessages.email\\\">\\r\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationsForm.get('email').hasError(validation.type) && (validationsForm.get('email').dirty || validationsForm.get('email').touched)\\\">\\r\\n          {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n    <ion-item>\\r\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Password</ion-label>\\r\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validationMessages.password\\\">\\r\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validationsForm.get('password').hasError(validation.type) && (validationsForm.get('password').dirty || validationsForm.get('password').touched)\\\">\\r\\n          {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n    <ion-button class=\\\"submit-btn\\\" expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!validationsForm.valid\\\">Log In</ion-button>\\r\\n    <label class=\\\"error-message\\\">{{errorMessage}}</label>\\r\\n  </form>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    LoginPageRoutingModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","export default \".error-message {\\n  color: var(--ion-color-danger);\\n}\\n\\n.go-to-register {\\n  text-align: center;\\n  margin-top: 20px;\\n}\\n\\n.submit-btn {\\n  margin-top: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vQzpcXFVzZXJzXFxwZXl0YVxcRG9jdW1lbnRzXFxJb25pY0dvU3R5bGUvc3JjXFxhcHBcXGxvZ2luXFxsb2dpbi5wYWdlLnNjc3MiLCJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVFLDhCQUFBO0FDQUY7O0FER0E7RUFFRSxrQkFBQTtFQUNBLGdCQUFBO0FDREY7O0FESUE7RUFFRSxnQkFBQTtBQ0ZGIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVycm9yLW1lc3NhZ2Vcclxue1xyXG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFuZ2VyKTtcclxufVxyXG5cclxuLmdvLXRvLXJlZ2lzdGVyXHJcbntcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgbWFyZ2luLXRvcDogMjBweDtcclxufVxyXG5cclxuLnN1Ym1pdC1idG5cclxue1xyXG4gIG1hcmdpbi10b3A6IDQwcHg7XHJcbn1cclxuIiwiLmVycm9yLW1lc3NhZ2Uge1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhbmdlcik7XG59XG5cbi5nby10by1yZWdpc3RlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjBweDtcbn1cblxuLnN1Ym1pdC1idG4ge1xuICBtYXJnaW4tdG9wOiA0MHB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {AuthService} from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n\r\n  validationsForm: FormGroup;\r\n  errorMessage = '';\r\n\r\n  validationMessages = {\r\n    email: [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'pattern', message: 'Please enter a valid email.' }\r\n    ],\r\n    password: [\r\n      { type: 'required', message: 'Password is required.' },\r\n      { type: 'minlength', message: 'Password must be at least 5 characters long.' }\r\n    ]\r\n  };\r\n\r\n  constructor(\r\n      private authService: AuthService,\r\n      private formBuilder: FormBuilder,\r\n      private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.validationsForm = this.formBuilder.group({\r\n      email: new FormControl('pf.poujol@gmail.com', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])),\r\n      password: new FormControl('azerty', Validators.compose([\r\n        Validators.minLength(5),\r\n        Validators.required\r\n      ])),\r\n    });\r\n  }\r\n\r\n  tryLogin(value) {\r\n    this.authService.doLogin(value)\r\n        .then(res => {\r\n          console.log('login success !');\r\n          this.router.navigate(['/home']);\r\n        }, err => {\r\n          this.errorMessage = err.message;\r\n          console.log(err);\r\n        });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"login-login-module-es5.js"}